{"version":3,"file":"static/js/635.82f3323a.chunk.js","mappings":"kSA0EA,EArEoB,WAClB,OAAwBA,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,GACRC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAaC,EAAb,KAMMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBJ,GAAQ,SAAAK,GAAQ,yBACXA,GADW,IAEdR,SAAS,GAFK,IAFA,UAMUS,EAAAA,EAAAA,MANV,gBAMRC,EANQ,EAMRA,QACRP,EAAQ,CACNJ,QAAO,OAAKW,GACZV,SAAS,EACTC,MAAO,OAVO,gDAahBE,EAAQ,CACNJ,OAAQ,GACRC,SAAS,EACTC,MAAM,EAAD,KAhBS,yDAAH,qDAoBjBU,QAAQC,MAERL,GACD,GAAE,CAACJ,IAEJ,IAAMU,EAAYX,EAAKH,OAAOe,KAAI,SAAAC,GAAK,aACrC,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMf,GAAhD,WACE,gBACEgB,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxC,2DAENC,IAAKP,EAAMQ,kBAEb,iCAAIR,EAAMS,YAAV,QAAkBT,EAAMU,YAVnBV,EAAME,GADsB,IAe/BjB,EAA2BE,EAA3BF,QAASC,EAAkBC,EAAlBD,MACXyB,EAD6BxB,EAAXH,OACD4B,OAAS,IAAMzB,EAAKF,UAAYE,EAAKD,MACtD2B,EAAc3B,IAAUD,EAC9B,OACE,4BACE,6CACCA,IAAW,4CACX4B,IACC,oGAMDF,IAAW,wBAAKb,MAGtB,EC9DD,EARiB,WACf,OACE,0BACE,SAAC,EAAD,KAGL,C,mMCNKgB,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIV,SAAexB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBoB,EAASK,IAAI,qBAD/B,uBACIhC,EADJ,EACIA,KADJ,kBAEIA,GAFJ,kEAKA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BlB,GAA7B,yFACkBY,EAASK,IAAT,iBAAuBjB,IADzC,uBACIf,EADJ,EACIA,KADJ,kBAEIA,GAFJ,kEAKA,SAAekC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,yFACkBR,EAASK,IAAT,gBAA8B,CAC/CF,OAAQ,CACJK,MAAAA,EACAC,KAAM,KAJX,uBACIpC,EADJ,EACIA,KADJ,kBAOIA,GAPJ,kEAUA,SAAeqC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BtB,GAA7B,yFACkBY,EAASK,IAAT,iBAAuBjB,EAAvB,aADlB,uBACIf,EADJ,EACIA,KADJ,kBAEIA,GAFJ,kEAKA,SAAesC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCvB,GAAhC,yFACkBY,EAASK,IAAT,iBAAuBjB,EAAvB,aADlB,uBACIf,EADJ,EACIA,KADJ,kBAEIA,GAFJ,kE","sources":["components/TrendMovies/TrendMovies.jsx","pages/HomePage/HomePage.jsx","shared/services/movies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { getTrending } from '../../shared/services/movies';\n\nconst TrendMovies = () => {\n  const [data, setData] = useState({\n    movies: [],\n    loading: false,\n    error: null,\n  });\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      try {\n        setData(prevData => ({\n          ...prevData,\n          loading: true,\n        }));\n        const { results } = await getTrending();\n        setData({\n          movies: [...results],\n          loading: false,\n          error: null,\n        });\n      } catch (err) {\n        setData({\n          movies: [],\n          loading: false,\n          error: err,\n        });\n      }\n    };\n    console.log();\n\n    fetchTrends();\n  }, [setData]);\n\n  const topMowies = data.movies.map(movie => (\n    <li key={movie.id}>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : 'http://hypeava.ru/uploads/posts/2020-02/1580997108_3.jpg'\n          }\n          alt={movie.original_title}\n        />\n        <p>{movie.name ?? movie.title}</p>\n      </Link>\n    </li>\n  ));\n  const { loading, error, movies } = data;\n  const topFilm = movies.length > 0 && !data.loading && !data.error;\n  const errorMovies = error && !loading;\n  return (\n    <div>\n      <h2>Top movies today</h2>\n      {loading && <p>Making a list...</p>}\n      {errorMovies && (\n        <p>\n          Today there are no popular films. Everyone only watches Stranger\n          Things.\n        </p>\n      )}\n\n      {topFilm && <ul>{topMowies}</ul>}\n    </div>\n  );\n};\n\nexport default TrendMovies;\n","import TrendMovies from './../../components/TrendMovies';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <TrendMovies />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'ac60926f151e6a5963568dadf02e1e9a',\n    }\n})\n\nexport async function getTrending () {\n    const {data} = await instance.get('/trending/all/day')\n    return data;\n}\n\nexport async function getMovieById (id) {\n    const {data} = await instance.get(`/movie/${id}`)\n    return data;\n}\n\nexport async function getMoviesBySearch (query) {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page: 1,\n        }\n    })\n    return data;\n}\n\nexport async function getMovieCast (id) {\n    const {data} = await instance.get(`/movie/${id}/credits`)\n    return data;\n}\n\nexport async function getMovieReviews (id) {\n    const {data} = await instance.get(`/movie/${id}/reviews`)\n    return data;\n}"],"names":["useState","movies","loading","error","data","setData","location","useLocation","useEffect","fetchTrends","prevData","getTrending","results","console","log","topMowies","map","movie","to","id","state","from","src","poster_path","alt","original_title","name","title","topFilm","length","errorMovies","instance","axios","baseURL","params","api_key","get","getMovieById","getMoviesBySearch","query","page","getMovieCast","getMovieReviews"],"sourceRoot":""}
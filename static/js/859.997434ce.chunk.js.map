{"version":3,"file":"static/js/859.997434ce.chunk.js","mappings":"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","sources":["components/MoviesSearch/SearchForm/SearchForm.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/MoviesPage/MoviesPage.jsx","shared/services/movies.js"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handlChange = event => {\n    const { value } = event.target;\n\n    setSearch(value);\n  };\n\n  const handlSubmit = event => {\n    if (!search) {\n      return;\n    }\n    event.preventDefault();\n    onSubmit(search);\n    setSearch('');\n  };\n  return (\n    <form onSubmit={handlSubmit}>\n      <input\n        name=\"search\"\n        value={search}\n        onChange={handlChange}\n        type=\"text\"\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState, useCallback } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchForm from './SearchForm';\nimport { getMoviesBySearch } from '../../shared/services/movies';\n\nconst MoviesSearch = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const location = useLocation();\n  console.log(searchQuery);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n        }));\n        const { results } = await getMoviesBySearch(searchQuery);\n        setState({\n          items: [...results],\n          loading: false,\n          error: null,\n        });\n      } catch (err) {\n        setState({\n          items: [],\n          loading: false,\n          error: err,\n        });\n      }\n    };\n    if (searchQuery) {\n      fetchMovies();\n    }\n  }, [searchQuery]);\n\n  const changeSearch = useCallback(\n    query => setSearchParams({ query, page: 1 }),\n    [setSearchParams]\n  );\n\n  const { items, loading, error } = state;\n\n  const searchMowies = items.map(item => (\n    <div>\n      <li key={item.id}>\n        <Link to={`/movies/${item.id}`} state={{ from: location }}>\n          <img\n            src={\n              item.poster_path\n                ? `https://image.tmdb.org/t/p/w500${item.poster_path}`\n                : 'http://hypeava.ru/uploads/posts/2020-02/1580997108_3.jpg'\n            }\n            alt={item.original_title}\n          />\n          <p>{item.name ?? item.title}</p>\n        </Link>\n      </li>\n    </div>\n  ));\n\n  const needMowies = items.length > 0 && !loading && !error;\n  const errorMovies = !error && !loading && searchQuery && !items.length > 0;\n  return (\n    <div>\n      <SearchForm onSubmit={changeSearch} />\n      {loading && <p>Making a list...</p>}\n      {errorMovies && <p>There is no such movie - watch Stranger Things.</p>}\n      {needMowies && <ul>{searchMowies}</ul>}\n    </div>\n  );\n};\n\nexport default MoviesSearch;\n","import MoviesSearch from './../../components/MoviesSearch';\n\nconst MoviesPage = () => {\n  return (\n    <>\n      <MoviesSearch />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'ac60926f151e6a5963568dadf02e1e9a',\n    }\n})\n\nexport async function getTrending () {\n    const {data} = await instance.get('/trending/all/day')\n    return data;\n}\n\nexport async function getMovieById (id) {\n    const {data} = await instance.get(`/movie/${id}`)\n    return data;\n}\n\nexport async function getMoviesBySearch (query) {\n    const {data} = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page: 1,\n        }\n    })\n    return data;\n}\n\nexport async function getMovieCast (id) {\n    const {data} = await instance.get(`/movie/${id}/credits`)\n    return data;\n}\n\nexport async function getMovieReviews (id) {\n    const {data} = await instance.get(`/movie/${id}/reviews`)\n    return data;\n}"],"names":["onSubmit","useState","search","setSearch","event","preventDefault","name","value","onChange","target","type","placeholder","items","loading","error","state","setState","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","console","log","useEffect","fetchMovies","prevState","getMoviesBySearch","results","changeSearch","useCallback","query","page","searchMowies","map","item","to","id","from","src","poster_path","alt","original_title","title","needMowies","length","errorMovies","instance","axios","baseURL","params","api_key","getTrending","data","getMovieById","getMovieCast","getMovieReviews"],"sourceRoot":""}